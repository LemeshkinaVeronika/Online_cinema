# Generated by Django 5.0.6 on 2024-06-17 15:13

import django.db.models.deletion
import django.db.models.manager
import mptt.fields
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("movieblog", "0015_alter_filmmodel_options_alter_filmmodel_managers_and_more"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CommentModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Комментарий")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлено"),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
            ],
            options={
                "verbose_name": "Комментарий",
                "verbose_name_plural": "Комментарии",
            },
        ),
        migrations.AlterModelOptions(
            name="filmmodel",
            options={
                "ordering": ["-publish"],
                "verbose_name": "Фильм",
                "verbose_name_plural": "Фильмы",
            },
        ),
        migrations.AlterModelManagers(
            name="filmmodel",
            managers=[
                ("film_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name="filmmodel",
            name="file",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="film",
                to="movieblog.filmfilesmodel",
                verbose_name="Файл",
            ),
        ),
        migrations.AddField(
            model_name="filmmodel",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AlterField(
            model_name="filmmodel",
            name="views",
            field=models.IntegerField(default=0, verbose_name="Количество просмотров"),
        ),
        migrations.AddIndex(
            model_name="filmmodel",
            index=models.Index(
                fields=["-publish"], name="movieblog_f_publish_596d66_idx"
            ),
        ),
        migrations.AddField(
            model_name="commentmodel",
            name="film",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="movieblog.filmmodel",
                verbose_name="Фильм",
            ),
        ),
        migrations.AddField(
            model_name="commentmodel",
            name="parent",
            field=mptt.fields.TreeForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="movieblog.commentmodel",
                verbose_name="Родительский комментарий",
            ),
        ),
        migrations.AddField(
            model_name="commentmodel",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователь",
            ),
        ),
    ]
